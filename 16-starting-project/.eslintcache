[{"/home/tomble/Documents/Catatan_Belajar/React-TheCompleteGuide/16-starting-project/src/index.js":"1","/home/tomble/Documents/Catatan_Belajar/React-TheCompleteGuide/16-starting-project/src/App.js":"2","/home/tomble/Documents/Catatan_Belajar/React-TheCompleteGuide/16-starting-project/src/components/SimpleInput.js":"3","/home/tomble/Documents/Catatan_Belajar/React-TheCompleteGuide/16-starting-project/src/hooks/use-input.js":"4"},{"size":142,"mtime":1616595887000,"results":"5","hashOfConfig":"6"},{"size":168,"mtime":1616595983000,"results":"7","hashOfConfig":"6"},{"size":2277,"mtime":1632052318358,"results":"8","hashOfConfig":"6"},{"size":701,"mtime":1632051820040,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"waf6vg",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/home/tomble/Documents/Catatan_Belajar/React-TheCompleteGuide/16-starting-project/src/index.js",[],["20","21"],"/home/tomble/Documents/Catatan_Belajar/React-TheCompleteGuide/16-starting-project/src/App.js",[],"/home/tomble/Documents/Catatan_Belajar/React-TheCompleteGuide/16-starting-project/src/components/SimpleInput.js",["22"],"/home/tomble/Documents/Catatan_Belajar/React-TheCompleteGuide/16-starting-project/src/hooks/use-input.js",["23"],"import { useEffect, useState } from \"react\";\n\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":1,"column":20,"nodeType":"30","messageId":"31","endLine":1,"endColumn":29},{"ruleId":"28","severity":1,"message":"29","line":1,"column":10,"nodeType":"30","messageId":"31","endLine":1,"endColumn":19},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]